// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: Open Default Keymap`
// from the command palette.
[
  {
    "context": "Editor && vim_mode == normal",
    "bindings": {
      "space space": "file_finder::Toggle"
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      "j k": "vim::NormalBefore" // remap jk in insert mode to escape.
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "space b b": "tab_switcher::ToggleAll",
      "space b k": "pane::CloseActiveItem",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Editor && vim_mode == normal && vim_operator == none && !VimWaiting",
    "bindings": {
      "space g b": "git::Blame",
      "space g d": "editor::ToggleSelectedDiffHunks",
      "space g h": "git::ToggleStaged",
      "space g r": "git::Restore",
      "space s i": "outline::Toggle",
      "space s p": "workspace::NewSearch",
      "space p p": ["projects::OpenRecent", { "create_new_window": false }],
      "space p i": "project_symbols::Toggle",
      "space o p": "project_panel::ToggleFocus",
      "space o a": "agent::ToggleFocus",
      "space o t": "workspace::NewCenterTerminal",
      "space w v": "pane::SplitRight",
      "space w s": "pane::SplitDown",
      "space b b": "tab_switcher::ToggleAll",
      "space b k": "pane::CloseActiveItem",
      "space b s": "workspace::Save",
      "space b S": "workspace::SaveWithoutFormat",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "shift-k": "editor::Hover"
    }
  },
  {
    "context": "VimControl && !menu && vim_mode != operator",
    "bindings": {
      "w": "vim::NextSubwordStart",
      "b": "vim::PreviousSubwordStart",
      "e": "vim::NextSubwordEnd",
      "g e": "vim::PreviousSubwordEnd",
      "space g o": "editor::OpenPermalinkToLine",
      "space g y": "editor::CopyPermalinkToLine",
      "space g g": [
        "task::Spawn",
        { "task_name": "lazygit", "reveal_target": "center" }
      ],
      "space g f": [
        "task::Spawn",
        { "task_name": "lazygit_file_log", "reveal_target": "center" }
      ],
      "space o c": [
        "task::Spawn",
        { "task_name": "Claude Code", "reveal_target": "dock" }
      ]
    }
  },
  {
    "context": "vim_mode == normal || vim_mode == visual",
    "bindings": {
      "s": ["vim::PushSneak", {}],
      "S": ["vim::PushSneakBackward", {}]
    }
  },
  {
    "context": "Dock",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  }
]
